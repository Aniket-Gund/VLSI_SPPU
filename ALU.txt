library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity alu_4bit is
    Port ( n1 : in STD_LOGIC_VECTOR (3 downto 0);
           n2 : in STD_LOGIC_VECTOR (3 downto 0);
           result : out STD_LOGIC_VECTOR (3 downto 0);
           op : in STD_LOGIC_VECTOR (2 downto 0);
           flag : out STD_LOGIC);
end alu_4bit;

architecture Behavioral of alu_4bit is
begin

    process(n1,n2,op)
        variable temp : std_logic_vector(4 downto 0);
    begin
        flag<= '0';
        case op is 
            when "000" => 
                temp := ('0' & n1) + n2;
                result <= temp(3 downto 0);
                flag <= temp(4);
            when "001" =>
                if n1 > n2 then 
                    result <= n1 - n2;
                else 
                    result <= n2 - n1;
                end if;
            when "010" => result <= n1 and n2;
            when "011" => result <= n1 or n2;
            when "100" => result <= n1 xor n2;
            when "101" => result <= n1 xnor n2;
            when "110" => result <= n1 nand n2;
            when others => result <= not n1;
        end case;
    end process;

end Behavioral;



Testbench:







----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;
entity alu_tb is
--  Port ( );
end alu_tb;
architecture Behavioral of alu_tb is
component alu4bit 
    Port ( n1,n2 : in STD_LOGIC_VECTOR (3 downto 0);
           op : in STD_LOGIC_VECTOR (2 downto 0);
           res : out STD_LOGIC_VECTOR (3 downto 0);
           flag : out STD_LOGIC);
end component;
signal n1,n2:std_logic_vector(3 downto 0);
signal op:std_logic_vector(2 downto 0);
signal res:std_logic_vector(3 downto 0);
signal flag: std_logic;
begin
uut: alu4bit port map( n1=>n1, n2=>n2, op=>op, res=>res, flag=>flag);
process
begin
n1<= "0101";
n2<="1011";
op<="000";
wait for 50 ns;
op<="001";
wait for 50 ns;
op<="010";
wait for 50 ns;
op<="011";
wait for 50 ns; 
op<="100";
wait for 50 ns;
op<="101";
wait for 50 ns;
op<="110";
wait for 50 ns;
op<="111";
wait for 50 ns;
wait;
end process;
end Behavioral;